#include <iostream>
#include <cmath>
using namespace std;
int main (){
    // tusk 1
    const int size = 20;
    int arr[size] = {-2,0,-3,-4,-5,6,7,8,9,10,1,1,2,2,4,2,42,42,1,2};
    int minus[size] = {};
    int plus[size] = {};
    int minCount = 0, plusCount = 0;
    for (int i = 0; i < size; i++){
        if (arr[i] > 0){
            plus[plusCount] = arr[i];
            plusCount++;
        } else if (arr[i] < 0){
            minus[minCount] = arr[i];
            minCount++;
        }
        
    }
    cout << "Целый массив: ";
    for (int i = 0; i < size; i++){
        cout << arr[i] << " ";
    }
    cout << endl;
    cout << "Положительные числа: ";
    for (int i = 0; i < plusCount; i++){
        cout << plus[i] << " ";
    }
    cout << endl;
    cout << "Отрицательные числа: ";
    for (int i = 0; i < minCount; i++){
        cout << minus[i] << " ";
    }
    cout << endl;
    // tusk 2
    int left, right;
    for (int i = 1; i < size; i++){
    cout << "Отрицательные числа: ";
        right = arr[i];
        left = arr[i-1];
        if (right > 0 and left > 0 or right < 0 and left < 0 ){
            cout << "Число что слева " << left << " с индексом " << i-1 << " Число что справо " << right << " с индексом " << i << endl;
        }
    }
    // tusk 3
    int bestEven = 0, even = 0;
    for (int i = 0; i < size; i++){
        if (arr[i] % 2 == 0){
            even++;
            if (even > bestEven){
                bestEven = even;
            }
        } else{
            even = 0;
        }
    }
    cout << "Длинна самой длинной последовательности - " << bestEven << endl;
    // tusk 4
    int *max = arr;
    for (int i = 0; i < size; i++){
        if (arr[i] > *max){
            max = &arr[i];
        }
    }
    int index = max - arr;
    for (int i = index + 1; i < size; i++){
        arr[i] = 1;
    }
    cout << "Макс элемент - " << *max << endl;
    cout << "Измененный массив: ";
    for (int i = 0; i < size; i++){
        cout << arr[i] << " ";
    }
    cout << endl;
    // tusk 5
    int Chet = 0, neChet = 0;
    for (int i = 0; i < size; i++){
        if (arr[i] % 2 == 0){
            Chet++;
        } else {
            neChet++;
        }
    }
    cout << "Кол-во четных: " << Chet << " Кол-во не четных: " << neChet << endl;

    int sumOne = 0;
    for (int i = 0; i < size; i++){
        if (arr[i] % 3 == 0){
            sumOne += arr[i];
        }
    }
    cout << "Сумма чисел кратным трем: " << sumOne << endl;

    int sumTwo = 0;
    for (int i = 0; i < size; i++){
        if (arr[i] % arr[0] == 0){
            sumTwo++;
        }
    }
    cout << "Количество чисел кратным первому элементу: " << sumTwo << endl;

    int *del = arr;
    int z = 0, v = 0;
    for (int i = 0; i < size; i++){
        for (int x = 1; x < abs(arr[i]); x++){
            if (arr[i] % x == 0){
                z++;
                if (z > v){
                    v = z;
                    del = &arr[i];
                }
            }
        }
        z = 0;
    }
    cout << "Число с наибольшем количеством делителей: " << *del << endl;
    int sumThree = 0;
    for (int i = 0; i < size; i++){
        sumThree += arr[i];
    }
    double arifm = sumThree / size;
    for (int i = 0; i < size; i++){
        if (arr[i] % 2 != 0 and arr[i] % 5 == 0 and arr[i] > arifm){
            cout << "В массиве есть число которое нечётное, делится на 5, и больше среднего арифметического всех элементов." << arr[i] << endl;
            break;
        } else if (i == size - 1){
            cout << "В массиве нет числа которое нечётное, делится на 5, и больше среднего арифметического всех элементов." << endl;
        }
    }
    // tusk 6
    const int sizeArr = 17;
    int newArr[sizeArr] = {42,1,4,2,-2,6,-4,12,-42,1,44,1,2,3,4,5,0};
    int len = 0, bestLen = 0;
    int oldRaz = 1;
    int leftNum, bestLeftNum = 0;
    for (int i = 0; i < sizeArr - 1; i++){
        int raz = newArr[i+1] - newArr[i];
        if (raz == 0){
            len = 0;
            continue;
        }

        if (raz * oldRaz < 0){
            len++;
            if (len > bestLen){
                bestLen = len;
                bestLeftNum = i - len + 2;
            }
        } else {
            len = 2;
        }
        oldRaz = raz;
    }
    cout << "Самый длинный подотрезок, на котором знаки соседних разностей (a[i+1]−a[i]) строго чередуются: ";
    for (int i = bestLeftNum; i < bestLeftNum + bestLen; i++){
        cout << newArr[i] << " ";
    }
    cout << " Длинна отрезка:" << bestLen;
    cout << endl;
    // task 7
    int arrA[12] = {1,2,4,-1,5,7,-10,5,6,1,0,0};
    int k = 0;
    while(k < 2){
        cin >> k;
    }
    int delK;
    int ostatki[k] = {0};
    // на строке выше почему то вс код выделяет ошибку но при этом все работает как надо
    for (int i = 0; i < 12; i++){
        int ostatok = ((arr[i] % k) + k) % k;
        ostatki[ostatok]++;
    }
    for (int i = 0; i < k; i++){
        cout << "Остаток " << i << ": " << ostatki[i] << endl;
    }
    int currentOstatok = -1;
    int currentLen = 0;
    bestLen = 0;
    int start = 0;
    int fitstInd = 0;
    int finishInd = 0;
    for (int i = 0; i < 12; i++){
        int ostatok = ((arr[i] % k) + k) % k;
        if (ostatok == currentOstatok){
            currentLen++;
        } else{
            currentOstatok = ostatok;
            start = i;
            currentLen = 1;
        }
        if (currentLen > bestLen){
            bestLen = currentLen;
            fitstInd = start;
            finishInd = i;
        }
    }
    cout << "Самаю длинная непрерывная последовательность элементов массива, которые даютодинаковый остаток при делении на k: Начало(";
    cout << fitstInd << ") Конец(" << finishInd << ") Длинна - " << bestLen<< endl;
    // Tusk 9
    int doubleArr[4][4] = {
        {42,11,-21,442},
        {-42,42,-21,4},
        {24,42,-42,4},
        {24,11,-21,42}
    };
    cout << "Исходный массив: " << endl;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            cout << doubleArr[i][j] << "\t";
        }
        cout << endl;
    }
    int scalar = 42;
    // скаляры не проходили без понятия как его найти поэтому он будет произвольным
    cout << "Массив умноженный на скаляр: " << endl;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            cout << doubleArr[i][j] * scalar << "\t";
        }
        cout << endl;
    }
    int stolb,stroka;
    for (int j = 0; j < 4; j++){
        cout << "Сумма " << j+1 << " столба = ";
        for (int i = 0; i < 4; i++){
            stolb += doubleArr[i][j];
        }
        cout << stolb << endl;
        stolb = 0;
        
    }
    for (int i = 0; i < 4; i++){
        cout << "Сумма " << i+1 << " строки = ";
        for (int j = 0; j < 4; j++){
            stroka += doubleArr[i][j];
        }
        cout << stroka << endl;
        stroka = 0;
        
    }
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (doubleArr[i][j] < 0){
                doubleArr[i][j] = 10;
            }
        }
    }
    int maxDD = doubleArr[0][0];
    int min = doubleArr[0][0];
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (doubleArr[i][j] > maxDD){
                maxDD = doubleArr[0][0];
            }
            if (doubleArr[i][j] < min){
                min = doubleArr[0][0];
            }
        }
    }
    cout << "Мааксимум = " << maxDD << " Минимум = " << min << endl;
    int doubleArrCopy[4][4] = {
        {24,42,-42,4},
        {24,11,-21,42},
        {42,11,-21,442},
        {-42,42,-21,4}
    };
    cout << "сложение двух массивов (итог):" << endl;
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            cout << doubleArr[i][j] + doubleArrCopy[i][j] << "\t";
        }
        cout << endl;
    }
    cout << "Поэлементное сравнение двух массивов (итог):" << endl;

    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if (doubleArr[i][j] < doubleArrCopy[i][j]){
            cout << doubleArr[i][j] << " < " << doubleArrCopy[i][j] << "\t";
            } else if (doubleArr[i][j] > doubleArrCopy[i][j]){
                cout << doubleArr[i][j] << " > " << doubleArrCopy[i][j] << "\t";
            } else{
                cout << doubleArr[i][j] << " = " << doubleArrCopy[i][j] << "\t";
            }

        }
        cout << endl;
    }
    return 0;
}
